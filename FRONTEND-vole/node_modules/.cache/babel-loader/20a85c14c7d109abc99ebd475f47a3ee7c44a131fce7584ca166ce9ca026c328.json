{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wille\\\\Documents\\\\GitHub\\\\BVWA2-frontend\\\\src\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProfileForm from './ProfileForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile({\n  loggedInUser\n}) {\n  _s();\n  const [editMode, setEditMode] = useState(false);\n  const [userProfile, setUserProfile] = useState({\n    ...loggedInUser\n  });\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [passwordError, setPasswordError] = useState(null);\n  const [imageError, setImageError] = useState(null);\n  useEffect(() => {\n    setUserProfile({\n      ...loggedInUser\n    });\n  }, [loggedInUser]);\n  const handleEditToggle = () => {\n    setEditMode(!editMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ProfileForm, {\n    user: userProfile,\n    onSave: updatedProfile => {\n      // Handle any additional logic here if needed\n      setUserProfile(updatedProfile);\n      setEditMode(false);\n    },\n    onCancel: () => setEditMode(false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"kPyteZ7/nyuI03sSUllpzF6lfks=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","ProfileForm","jsxDEV","_jsxDEV","Profile","loggedInUser","_s","editMode","setEditMode","userProfile","setUserProfile","passwordData","setPasswordData","currentPassword","newPassword","confirmPassword","passwordError","setPasswordError","imageError","setImageError","handleEditToggle","user","onSave","updatedProfile","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wille/Documents/GitHub/BVWA2-frontend/src/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProfileForm from './ProfileForm';\r\n\r\nfunction Profile({ loggedInUser }) {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [userProfile, setUserProfile] = useState({ ...loggedInUser });\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [passwordError, setPasswordError] = useState(null);\r\n  const [imageError, setImageError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setUserProfile({ ...loggedInUser });\r\n  }, [loggedInUser]);\r\n\r\n  const handleEditToggle = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  return (\r\n    <ProfileForm\r\n      user={userProfile}\r\n      onSave={(updatedProfile) => {\r\n        // Handle any additional logic here if needed\r\n        setUserProfile(updatedProfile);\r\n        setEditMode(false);\r\n      }}\r\n      onCancel={() => setEditMode(false)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC;IAAE,GAAGM;EAAa,CAAC,CAAC;EACnE,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC;IAC/Cc,eAAe,EAAE,EAAE;IACnBC,WAAW,EAAE,EAAE;IACfC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdU,cAAc,CAAC;MAAE,GAAGL;IAAa,CAAC,CAAC;EACrC,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7BZ,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEJ,OAAA,CAACF,WAAW;IACVoB,IAAI,EAAEZ,WAAY;IAClBa,MAAM,EAAGC,cAAc,IAAK;MAC1B;MACAb,cAAc,CAACa,cAAc,CAAC;MAC9Bf,WAAW,CAAC,KAAK,CAAC;IACpB,CAAE;IACFgB,QAAQ,EAAEA,CAAA,KAAMhB,WAAW,CAAC,KAAK;EAAE;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEN;AAACtB,EAAA,CA9BQF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAgChB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}